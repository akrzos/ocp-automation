---
- name: Install dependencies
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - golang
    - gcc
    - git
    - golang-bin
    - gcc-c++

- name: create gopath dir
  file:
    path: "{{ GOPATH | default('/root/.go') }}"
    state: directory

- name: set workdir
  set_fact:
    workdir: "{{ GOPATH }}/src/github.com/openshift/installer"

- name: cleanup installer code if it exists
  file:
    path: "{{ workdir }}"
    state: absent

- name: cleanup vars file
  file:
    path: /tmp/ocp-env.sh
    state: absent

- name: get the installer and its dependencies
  shell: go get "{{ item }}"
  with_items:
    - github.com/openshift/installer/data
  environment:
     GOPATH: "{{ GOPATH }}"

- name: build installer binary
  shell: cd {{ workdir }}; hack/build.sh
  environment:
     GOPATH: "{{ GOPATH }}"

- name: get terraform binary
  shell: cd {{ workdir }}; hack/get-terraform.sh
  environment:
    GOPATH: "{{ GOPATH }}"

- name: vars path
  set_fact:
     openshift_vars_file: "{{ansible_env.HOME}}/ocp-env.sh"

- name: copy the script containing the OCP vars
  template:
    src: ocp-aws-env.sh.j2
    dest: "{{ openshift_vars_file }}"
    mode: 0755
  when: OPENSHIFT_INSTALL_PLATFORM == "aws"

- name: installer config
  shell: "source {{ openshift_vars_file }}; cd {{ workdir }}; bin/openshift-install create install-config"

- name: copy the config script to /tmp
  copy:
    src : config.py
    dest: /tmp/config.py

- name: set the number of master and worker node count
  shell: python /tmp/config.py install-config "{{ workdir }}/install-config.yml" -master_count {{ OPENSHIFT_INSTALL_MASTER_COUNT }} -worker_count {{ OPENSHIFT_INSTALL_WORKER_COUNT }}

- name: manifests
  shell: "source {{ openshift_vars_file }}; cd {{ workdir }}; bin/openshift-install create manifests"

- name: set the instance type of master nodes
  shell: python /tmp/config.py master_instances "{{ workdir }}/openshift/99_openshift-cluster-api_master-machines.yaml" -master_instance_type {{ OPENSHIFT_INSTALL_MASTER_INSTANCE_FLAVOR }}

- name: set the instance type of master nodes
  shell: python /tmp/config.py worker_instances "{{ workdir }}/openshift/99_openshift-cluster-api_worker-machineset.yaml" -worker_instance_type {{ OPENSHIFT_INSTALL_WORKER_INSTANCE_FLAVOR }}

- name: ignition configs
  shell: "source {{ openshift_vars_file }}; cd {{ workdir }}; bin/openshift-install create ignition-configs"

- name: set the user in ignition configs
  replace:
    path: "{{ item }}"
    regexp: "core"
    replace: "{{ OPENSHIFT_INSTALL_USER }}"
  with_items:
     - "{{ workdir }}/bootstrap.ign"
     - "{{ workdir }}/master.ign"
     - "{{ workdir }}/worker.ign"

- block:
    - name: download the image
      get_url:
        url: "{{ OPENSHIFT_IMAGE_URL }}"
        dest: /root/rhcos-qemu.qcow2.gz

    - name: run openshift installer on libvirt
      shell: "source {{ openshift_vars_file }}; cd {{ workdir }}; bin/openshift-install create cluster --log-level=debug"
  when: OPENSHIFT_INSTALL_PLATFORM == "libvirt"

- block:
    - name: run openshift installer on aws
      shell: "source {{ openshift_vars_file }}; cd {{ workdir }}; bin/openshift-install create cluster --log-level=debug"
     
    - name: sleep for sometime for the cluster to settle
      pause:
        minutes: 3
  when: OPENSHIFT_INSTALL_PLATFORM == "aws"
